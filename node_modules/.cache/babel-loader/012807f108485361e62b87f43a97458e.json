{"ast":null,"code":"var _jsxFileName = \"/Users/princejassal/Documents/GitHub/Employee_Management/src/container/homepage/services.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../components/button\";\nimport { deviceSize } from \"../../components/responsive\";\nimport { ServiceCard } from \"../../components/serviceCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n_c = ServicesContainer;\nconst Title = styled.h1`\nfont-size: 3.3em;\n  font-weight: 900;\n  color: #000;\n  @media screen and (max-width: ${deviceSize.mobile}px) {\n    font-size: 25px;\n  }\n`;\n_c2 = Title;\nconst ServicesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c3 = ServicesWrapper;\nconst BottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n_c4 = BottomContainer;\nconst WarningText = styled.h3`\n  color: rgba(100, 100, 100);\n  font-weight: 500;\n`;\n_c5 = WarningText;\nconst ViewMoreButton = styled(Button)`\n  background-color: #f2f2f2;\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.4);\n  color: #959595;\n  font-size: 14px;\n  &:hover {\n    background-color: #f2f2f2;\n    filter: contrast(0.8);\n  }\n`;\n_c6 = ViewMoreButton;\n\nconst wait = num => new Promise(rs => setTimeout(rs, num));\n\nexport function Services(props) {\n  _s();\n\n  const [offeredServices, setServices] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const isServicesEmpty = !offeredServices || offeredServices && offeredServices.length === 0;\n\n  const fetchServices = async () => {\n    setLoading(true);\n    const response = await Axios.get(\"http://localhost:9000/services\").catch(err => {\n      console.log(\"Error: \", err);\n    });\n\n    if (response) {\n      setServices(response.data);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchServices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ServicesContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Most used services & More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServicesWrapper, {\n      children: [isServicesEmpty && !isLoading && /*#__PURE__*/_jsxDEV(WarningText, {\n        children: \"No Services are published yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(WarningText, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, this), !isServicesEmpty && !isLoading && offeredServices.map((service, idx) => /*#__PURE__*/_jsxDEV(ServiceCard, { ...service\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomContainer, {\n      children: !isServicesEmpty && !isLoading && /*#__PURE__*/_jsxDEV(ViewMoreButton, {\n        children: \"View More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Services, \"zcBut7Zvq0E5zDVKQT7qK/ac+n4=\");\n\n_c7 = Services;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ServicesContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"ServicesWrapper\");\n$RefreshReg$(_c4, \"BottomContainer\");\n$RefreshReg$(_c5, \"WarningText\");\n$RefreshReg$(_c6, \"ViewMoreButton\");\n$RefreshReg$(_c7, \"Services\");","map":{"version":3,"sources":["/Users/princejassal/Documents/GitHub/Employee_Management/src/container/homepage/services.jsx"],"names":["Axios","React","useEffect","useState","styled","Button","deviceSize","ServiceCard","ServicesContainer","div","Title","h1","mobile","ServicesWrapper","BottomContainer","WarningText","h3","ViewMoreButton","wait","num","Promise","rs","setTimeout","Services","props","offeredServices","setServices","isLoading","setLoading","isServicesEmpty","length","fetchServices","response","get","catch","err","console","log","data","map","service","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAI;AACrC;AACA;AACA;AACA;AACA,CALA;KAAMD,iB;AAON,MAAME,KAAK,GAAGN,MAAM,CAACO,EAAG;AACxB;AACA;AACA;AACA,kCAAkCL,UAAU,CAACM,MAAO;AACpD;AACA;AACA,CAPA;MAAMF,K;AASN,MAAMG,eAAe,GAAGT,MAAM,CAACK,GAAI;AACnC;AACA;AACA,CAHA;MAAMI,e;AAKN,MAAMC,eAAe,GAAGV,MAAM,CAACK,GAAI;AACnC;AACA;AACA;AACA,CAJA;MAAMK,e;AAMN,MAAMC,WAAW,GAAGX,MAAM,CAACY,EAAG;AAC9B;AACA;AACA,CAHA;MAAMD,W;AAKN,MAAME,cAAc,GAAGb,MAAM,CAACC,MAAD,CAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMY,c;;AAWN,MAAMC,IAAI,GAAIC,GAAD,IAAS,IAAIC,OAAJ,CAAaC,EAAD,IAAQC,UAAU,CAACD,EAAD,EAAKF,GAAL,CAA9B,CAAtB;;AAEA,OAAO,SAASI,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC9B,QAAM,CAACC,eAAD,EAAkBC,WAAlB,IAAiCvB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACwB,SAAD,EAAYC,UAAZ,IAA0BzB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM0B,eAAe,GACnB,CAACJ,eAAD,IAAqBA,eAAe,IAAIA,eAAe,CAACK,MAAhB,KAA2B,CADrE;;AAGA,QAAMC,aAAa,GAAG,YAAY;AAChCH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMI,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAU,gCAAV,EAA4CC,KAA5C,CACpBC,GAAD,IAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD,KAHoB,CAAvB;;AAMA,QAAIH,QAAJ,EAAc;AACZN,MAAAA,WAAW,CAACM,QAAQ,CAACM,IAAV,CAAX;AACD;;AAEDV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAbD;;AAeA1B,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAA,iBACGF,eAAe,IAAI,CAACF,SAApB,iBACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIGA,SAAS,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJhB,EAKG,CAACE,eAAD,IACC,CAACF,SADF,IAECF,eAAe,CAACc,GAAhB,CAAoB,CAACC,OAAD,EAAUC,GAAV,kBAClB,QAAC,WAAD,OAA2BD;AAA3B,SAAkBC,GAAlB;AAAA;AAAA;AAAA;AAAA,cADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE,QAAC,eAAD;AAAA,gBACG,CAACZ,eAAD,IAAoB,CAACF,SAArB,iBACC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA/CeJ,Q;;MAAAA,Q","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../components/button\";\nimport { deviceSize } from \"../../components/responsive\";\nimport { ServiceCard } from \"../../components/serviceCard\";\n\nconst ServicesContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Title = styled.h1`\nfont-size: 3.3em;\n  font-weight: 900;\n  color: #000;\n  @media screen and (max-width: ${deviceSize.mobile}px) {\n    font-size: 25px;\n  }\n`;\n\nconst ServicesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BottomContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst WarningText = styled.h3`\n  color: rgba(100, 100, 100);\n  font-weight: 500;\n`;\n\nconst ViewMoreButton = styled(Button)`\n  background-color: #f2f2f2;\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.4);\n  color: #959595;\n  font-size: 14px;\n  &:hover {\n    background-color: #f2f2f2;\n    filter: contrast(0.8);\n  }\n`;\n\nconst wait = (num) => new Promise((rs) => setTimeout(rs, num));\n\nexport function Services(props) {\n  const [offeredServices, setServices] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const isServicesEmpty =\n    !offeredServices || (offeredServices && offeredServices.length === 0);\n\n  const fetchServices = async () => {\n    setLoading(true);\n    const response = await Axios.get(\"http://localhost:9000/services\").catch(\n      (err) => {\n        console.log(\"Error: \", err);\n      }\n    );\n\n    if (response) {\n      setServices(response.data);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchServices();\n  }, []);\n\n  return (\n    <ServicesContainer>\n      <Title>Most used services & More</Title>\n      <ServicesWrapper>\n        {isServicesEmpty && !isLoading && (\n          <WarningText>No Services are published yet!</WarningText>\n        )}\n        {isLoading && <WarningText>Loading...</WarningText>}\n        {!isServicesEmpty &&\n          !isLoading &&\n          offeredServices.map((service, idx) => (\n            <ServiceCard key={idx} {...service} />\n          ))}\n      </ServicesWrapper>\n      <BottomContainer>\n        {!isServicesEmpty && !isLoading && (\n          <ViewMoreButton>View More</ViewMoreButton>\n        )}\n      </BottomContainer>\n    </ServicesContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}